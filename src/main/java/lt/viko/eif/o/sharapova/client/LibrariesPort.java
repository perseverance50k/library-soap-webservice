
package lt.viko.eif.o.sharapova.client;

import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "LibrariesPort", targetNamespace = "http://spring.io/guides/gs-producing-web-service")
@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface LibrariesPort {


    /**
     * 
     * @param getLibrariesByBookRequest
     * @return
     *     returns lt.viko.eif.o.sharapova.client.GetLibrariesByBookResponse
     */
    @WebMethod
    @WebResult(name = "getLibrariesByBookResponse", targetNamespace = "http://spring.io/guides/gs-producing-web-service", partName = "getLibrariesByBookResponse")
    public GetLibrariesByBookResponse getLibrariesByBook(
        @WebParam(name = "getLibrariesByBookRequest", targetNamespace = "http://spring.io/guides/gs-producing-web-service", partName = "getLibrariesByBookRequest")
        GetLibrariesByBookRequest getLibrariesByBookRequest);

    /**
     * 
     * @param getLibraryByNameRequest
     * @return
     *     returns lt.viko.eif.o.sharapova.client.GetLibraryByNameResponse
     */
    @WebMethod
    @WebResult(name = "getLibraryByNameResponse", targetNamespace = "http://spring.io/guides/gs-producing-web-service", partName = "getLibraryByNameResponse")
    public GetLibraryByNameResponse getLibraryByName(
        @WebParam(name = "getLibraryByNameRequest", targetNamespace = "http://spring.io/guides/gs-producing-web-service", partName = "getLibraryByNameRequest")
        GetLibraryByNameRequest getLibraryByNameRequest);

}
